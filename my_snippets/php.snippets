extends php,html

# ==========  GENERAL PHP {{{
snippet php "Open PHP"
<?php
endsnippet
snippet echoif "PHP Echo If (expression)"
$0<?php echo $${1:var} ? $${2:$1} : '${3:nope}' ?>
endsnippet
snippet echo "PHP Echo"
$0<?php echo $1 ?>
endsnippet
snippet rett
return true;
endsnippet
snippet retf
return false;
endsnippet
snippet phpcomm "comment block"
/**
 * $1
 */
endsnippet
snippet phpre "PHP Redirect Location"
header("Location: ${1:http://example.com/myOtherPage.php}");
endsnippet
snippet phperr "Add php dev errors for my ip"
if ($_SERVER['REMOTE_ADDR']=='107.189.218.58' || $_SERVER['DOCUMENT_ROOT']=='/var/www') {
	error_reporting(E_ALL);
	ini_set('display_errors', 1);
	ini_set('display_startup_errors', 1);
	$startTime = microtime(true);
}
endsnippet
snippet phptimer "Execution Timer For PHP"
$time_pre = microtime(true);
exec(...);
$time_post = microtime(true);
$exec_time = $time_post - $time_pre;
endsnippet
# }}}
# ==========  POSTS, GETS, REQS, & CLEANERS {{{
snippet GET "PHP get"
$_GET['${1}']$0
endsnippet
snippet POST "PHP post"
$_POST['${1}']$0
endsnippet
snippet SESS "PHP session"
$_SESSION['${1}']$0
endsnippet
snippet gclean "cleaned $_GET"
$$1 = preg_replace("#[^0-9a-z ~?&@/:._+=-]#i", '', $_GET['$1']);$0
endsnippet
snippet rclean "cleaned $_REQUEST"
$$1 = preg_replace("#[^0-9a-z ~?&@/:._+=-]#i", '', $_REQUEST['$1']);$0
endsnippet
snippet pclean "cleaned $_POST"
$$1 = preg_replace("#[^0-9a-z ~?&@/:._+=-]#i", '', $_POST['$1']);$0
endsnippet
snippet gisset "isset $_GET"
$$1=isset($_GET['${2:$1}']) ? preg_replace("#[^0-9a-z ~?&@/:._+=-]#i", '', $_GET['$2']) : '';$0
endsnippet
snippet risset "isset $_REQUEST"
$$1=isset($_REQUEST['${2:$1}']) ? preg_replace("#[^0-9a-z ~?&@/:._+=-]#i", '', $_REQUEST['$2']) : '';$0
endsnippet
snippet pisset "isset $_POST"
$$1=isset($_POST['${2:$1}']) ? preg_replace("#[^0-9a-z ~?&@/:._+=-]#i", '', $_POST['$2']) : '';$0
endsnippet
snippet sisset "isset $_SESSION"
$$1=isset($_SESSION['${2:$1}']) ? preg_replace("#[^0-9a-z ~?&@/:._+=-]#i", '', $_SESSION['$2']) : '';$0
endsnippet
snippet visset "isset $variable"
$$1=isset($${2:$1}) ? $$2 : '';$0
endsnippet

## REALESCAPES:

snippet escape "mysqli_real_escape_string"
$$1=isset($_${2:POST}['${3:$1}']) ? mysqli_real_escape_string($sql_con, $_$2['$3']) : '';$0
endsnippet

# }}}
# ==========  VARIABLES & SUCH {{{
snippet ev "echo var: $var <br>"
echo "${1:var}: $$1 <br />";$0
endsnippet
snippet $ "PHP variable"
$${1:var} ${2:= ${3:value}};
endsnippet
snippet =?:
$${1:foo} = ${2:true} ? ${3:a} : ${0};
endsnippet
snippet ?:
${1:true} ? ${2:a} : ${0}
endsnippet
snippet bad_usernames "Bad Usernames Array"
$bad_usernames = array("admin","administrator","default","house","sponsor","username","user","users","master","expired","yourusername",'autoresponder','desiredusername', 'coop','member','members','rotator','random','account');
endsnippet
# }}}
# ==========  INCLUDES{{{
snippet inc
include '${1:file}';$0
endsnippet
snippet inco
include_once '${1:file}';$0
endsnippet
snippet rec
require '${1:file}';$0
endsnippet
snippet reco
require_once '${1:file}';$0
endsnippet
# }}}
# ==========  DATA & ARRAY MANIPULATORS{{{
snippet vd
var_dump(${0});
endsnippet
snippet vdd
var_dump(${1}); die('${0:}');
endsnippet
snippet sr "str_replace"
str_replace(${1:search}, ${2:replace}, ${3:subject})$0
endsnippet
snippet find_exact "find in string with preg_match"
if(preg_match("/${1:needle}(\s|$|\.|\,)/", ${2:haystack})$0
endsnippet
snippet find_broad "find in string with strrpos"
if (stripos(${1:needle}, ${2:haystack})!==false)$0
endsnippet
snippet ia "in_array"
in_array(${1:needle}, ${2:haystack})$0
endsnippet
snippet kv "'key' => 'value',"
"${1:key}" => "${2:value}",$0
endsnippet
snippet for "for ($i = 0; $i < $count; $i++) { ... }"
for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
	${0:${VISUAL}}
}
endsnippet
snippet fe "foreach ($var as $val) { .. }"
foreach ($${1:var} as $${2:val}) {
	${0:${VISUAL}}
}
endsnippet
snippet k2v "names keys as values"
foreach ($row as $key => $val) { $$key=$val; }
endsnippet
snippet fekv "foreach ($var as $key => $val) { .. }"
foreach ($${1:var} as $${2:key} => $${3:val}) {
	${0:${VISUAL}}
}
endsnippet
snippet fetbl "foreach table for troubleshooting"
$tbl='<table border="0" cellspacing="2" cellpadding="8">';
foreach ($${1:_POST} as $k => $v) {
	$k = urldecode(stripslashes($k));
	$v = urldecode(stripslashes($v));
	$tbl.='
<tr>
	<td>'. urldecode(stripslashes($k)) .'</td>
	<td>'. urldecode(stripslashes($v)) .'</td>
</tr>';
}
$tbl.='</table>';
echo $tbl;
die; 
endsnippet
snippet ifset "if variable isset"
if (isset ($${1:var}) && $$1!='') {
	${0:${VISUAL}}
}
endsnippet
snippet if "basic if condition"
if (${1:/* condition */}) {
	${2:// code...}
}
$0
endsnippet
snippet ife "if else"
if (${1:/* condition */}) {
	${2:// code...}
} else {
	${3:// code...}
}
$0
endsnippet
snippet el "else { ... }"
} else {
	${0:${VISUAL}}
}
endsnippet
snippet elif "elseif(condition) { ... }"
} elseif (${1}) {
	${0:${VISUAL}}
}
endsnippet
snippet ifel "<?php if (condition): ?> ... <?php else: ?> ... <?php endif; ?>"
<?php if (${1}): ?>
	${0:${VISUAL}}
<?php else: ?>
	${2}
<?php endif; ?>
endsnippet
snippet do "do"
do {
	${0:VISUAL}
} while (${1:/* condition */});"
endsnippet
snippet evenodd "even or odd logic"
if ($${1:number} % 2 === 0) {
	$0
}
endsnippet
snippet striparr "preg_replace strip out bad words"
$nar=array(${1:'bad','words'});
$yar=array(${2:'ok','replacements'});
$${3:cleaned_string}=str_replace($nar, $yar, $${4:dirty_string});
endsnippet
snippet xif "explode string contains delimiter"
$${1:array_name}=array();
if (stripos(${2:string}, '${3:delimiter}')!==false) {
	$x=explode('$3', $2);
	foreach ($x as $v) {
		if (!in_array($v, $$1)) $$1[]=$v;
	}
} else {
		if (!in_array($2, $$1) && $2!='') $$1[]=$2;
}
$0
endsnippet

# }}}
# ==========  PHP DATES: {{{
snippet now "PHP date, NOW"
$now = date("Y-m-d H:i:s");
endsnippet
snippet today "php date Today"
$today = date("Y-m-d");
endsnippet
snippet 7day "PHP date, Next Week"
$nextWeek = date("Y-m-d", strtotime("+7 day"));
endsnippet
snippet humandate "human readable date Jan 4th 20xx"
date("M jS Y", strtotime("+7 day"))
endsnippet
snippet year "php date Year"
date("Y");
endsnippet
# }}}
# ========== MY FUNCTIONS: {{{
snippet count_it "my count function"
count_it($sql_con, "SELECT ${1:id} FROM ${2:table} WHERE ${3:thing}='$${4:$3}'${5: AND ${6:thing}='$${7:$6}'}${8: LIMIT ${9:1}}")$0
endsnippet

snippet usr_var "my sql_var function for user_vars"
sql_var($sql_con, "SELECT ${1:var1} FROM ${2:user_vars} WHERE ${3:user}='$${4:username}'${5: AND ${6:thing}='$${7:$6}'}${8: LIMIT ${9:1}}")$0
endsnippet
snippet sql_var "my sql_var function"
sql_var($sql_con, "SELECT ${1:id} FROM ${2:table} WHERE ${3:thing}='$${4:$3}' AND ${5:thing}='$${6:$5}'${7: LIMIT ${8:1}}");$0
endsnippet
# }}}
# ========== SQL {{{
snippet k=v
${1:var}='$${2:$1}'$0
endsnippet
snippet skv "simple SQL formated k=v for updates etc.." A
${1:var}='$${2:$1}'$0
endsnippet
snippet vvv "simple SQL formated k=v for updates etc.." A
${1:var}='$$1',$0
endsnippet
snippet sqlnr "mysqli_num_rows($result)"
mysqli_num_rows($sql)
endsnippet
snippet sqlarr "Get array from SQL"
$sql=mysqli_query($sql_con, "SELECT * FROM ${1:table} WHERE ${2:key}='$${3:$2}'");
$arr=mysqli_fetch_array($sql);
$${4:val}=$arr['${5:$4}'];$0
mysqli_free_result($sql);
endsnippet
snippet sqlwhile "SQL array while loop"
$sql = mysqli_query($sql_con, "SELECT * FROM ${1:table} WHERE ${2:key}='$${3:$2}'"); 
while ($row = mysqli_fetch_array($sql)) {
	$${4:val}=$row['${5:$4}'];$0
} 
mysqli_free_result($sql);
endsnippet
snippet varr "$var=$arr['name'];"
$${1:val}=$arr['${2:$1}'];$0
endsnippet
snippet 1a "$var=$arr['name'];"
$${1:val}=$arr['${2:$1}'];$0
endsnippet
snippet arow "$var=$row['name'];"
$${1:val}=$row['${2:$1}'];$0
endsnippet
snippet 1r "$var=$row['name'];"
$${1:val}=$row['${2:$1}'];$0
endsnippet
snippet dbcon "Database Connection"
$sql_con = myqli_connect("localhost","${1:user}","${2:pass}","${3:table}") or die ("Failed To Connect!");
endsnippet
snippet insertm "SQL Insert With Message"
$sql_update=mysqli_query($sql_con, "INSERT INTO ${1:table} (${2:var1}, ${3:var2}) VALUES ('$${4:$2}', '$${5:$3}')");$0
if ($sql_update) $msg = '<div class="green_bg msg">Account Updated</div><br /><br />';
else $msg = '<div class="red_bg msg">Failed To Update...<br />Server Error, Please Try Again Later</div><br /><br />';
$0
endsnippet
snippet insert "SQL Insert"
mysqli_query($sql_con, "INSERT INTO ${1:table} (${2:var1}, ${3:var2}) VALUES ('$${4:$2}', '$${5:$3}')");$0
endsnippet
snippet update "SQL Update"
mysqli_query($sql_con, "UPDATE ${1:table} SET ${2:key}='$${3:$2}' WHERE ${4:key}='$${5:$4}'"); $0
endsnippet
snippet updatem "SQL Update With Message"
$sql_update=mysqli_query($sql_con, "UPDATE ${1:table} SET ${2:key}='$${3:$2}' WHERE ${4:key}='$${5:$4}'");
if ($sql_update) $msg = '<div class="green_bg msg">Account Updated</div><br /><br />';
else $msg = '<div class="red_bg msg">Failed To Update...<br />Server Error, Please Try Again Later</div><br /><br />';
$0
endsnippet
# }}}
# ========== MAIL {{{
snippet mail "PHP Mail"
mail(${1:to}, ${2:subject}, ${3:\$message}, $header);
endsnippet
snippet mailh "PHP Mail With Headers"
$header.= 'X-Mailer: PHP/' . phpversion() . "\r\n" .
"MIME-Version: 1.0\r\n" .
"From: ${1:\$site_name} <${2:\$support_email}>" . "\r\n";
"Content-type: text/plain; charset=iso-8859-1\r\n" .
"Content-Transfer-Encoding: 8bit\r\n\r\n";

mail(${3:\$to}, ${4:\$subject}, ${5:\$message}, $header);
endsnippet
# }}}
